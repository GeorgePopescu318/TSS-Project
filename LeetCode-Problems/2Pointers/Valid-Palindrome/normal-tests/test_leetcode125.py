# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import leetcode125 as module_0


def test_case_0(): #PASSED
    str_0 = "qhV~\nm\x0ciA<F%9:C<="
    solution_0 = module_0.Solution()
    bool_0 = solution_0.isPalindrome(str_0)
    assert bool_0 is False


def test_case_1(): #PASSED
    solution_0 = module_0.Solution()
    solution_1 = module_0.Solution()
    str_0 = "<;OH6hS,u`"
    bool_0 = solution_0.isPalindrome(str_0)
    assert bool_0 is False
    str_1 = ""
    bool_1 = solution_1.isPalindrome(str_1)
    assert bool_1 is True


def test_case_2(): #PASSED
    solution_0 = module_0.Solution()
    solution_1 = module_0.Solution()


def test_case_3(): #PASSED
    solution_0 = module_0.Solution()
    solution_1 = module_0.Solution()
    str_0 = "<;OH6hS,u`"
    bool_0 = solution_0.isPalindrome(str_0)
    assert bool_0 is False
    str_1 = ""
    bool_1 = solution_1.isPalindrome(str_1)
    assert bool_1 is True
    str_2 = "{]77"
    bool_2 = solution_0.isPalindrome(str_2)
    assert bool_2 is True


#@pytest.mark.xfail(strict=True)
def test_case_4(): #FAILED test_leetcode125.py::test_case_4 - KeyError: 0
    str_0 = "dr5/\x0cG(@.}(~h>Zw/W6"
    solution_0 = module_0.Solution()
    bool_0 = solution_0.isPalindrome(str_0)
    assert bool_0 is False
    str_1 = "L^~M2a7b3L"
    str_2 = 'z\rF;^"GL}{^u|$z*oV\x0cL'
    solution_1 = module_0.Solution()
    bool_1 = solution_1.isPalindrome(str_1)
    assert bool_1 is False
    dict_0 = {str_2: str_2, str_1: str_1, str_2: str_2}
    str_3 = "\\t}U9j)=&ObICie.G6"
    bool_2 = solution_0.isPalindrome(str_3)
    assert bool_2 is False
    str_4 = "\tp%DF~6OD:H/NP"
    bool_3 = solution_0.isPalindrome(str_4)
    assert bool_3 is False
    solution_1.isPalindrome(dict_0)
