# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import leetcode15 as module_0
import builtins as module_1


#@pytest.mark.xfail(strict=True)
def test_case_0(): #FAILED test_leetcode15.py::test_case_0 - TypeError: Solution() takes no arguments
    int_0 = 724
    bool_0 = True
    list_0 = [bool_0]
    solution_0 = module_0.Solution()
    list_1 = solution_0.threeSum(list_0)
    dict_0 = {}
    solution_1 = module_0.Solution(**dict_0)
    int_1 = 182
    list_2 = [int_0, int_1]
    module_0.Solution(*list_2)


def test_case_1(): #PASSED
    dict_0 = {}
    solution_0 = module_0.Solution()
    list_0 = solution_0.threeSum(dict_0)
    solution_1 = module_0.Solution()
    solution_2 = module_0.Solution()
    list_1 = []
    solution_3 = module_0.Solution(**dict_0)
    list_2 = solution_1.threeSum(list_1)


#@pytest.mark.xfail(strict=True)
def test_case_2(): #FAILED test_leetcode15.py::test_case_2 - TypeError: Solution() takes no arguments
    str_0 = "\nfu|\\x+n)@l\r6(g [%A'"
    module_0.Solution(*str_0)


#@pytest.mark.xfail(strict=True)
def test_case_3(): #FAILED test_leetcode15.py::test_case_3 - TypeError: object() argument after ** must be a mapping, not set
    int_0 = 324
    bool_0 = False
    list_0 = [int_0, int_0, bool_0, bool_0]
    solution_0 = module_0.Solution()
    list_1 = solution_0.threeSum(list_0)
    solution_1 = module_0.Solution()
    list_2 = solution_1.threeSum(list_1)
    set_0 = {solution_1, solution_1}
    module_1.object(**set_0)


def test_case_4(): #PASSED
    int_0 = 324
    bool_0 = False
    list_0 = [int_0, int_0, int_0, bool_0, bool_0, int_0, bool_0]
    solution_0 = module_0.Solution()
    list_1 = solution_0.threeSum(list_0)
    list_2 = []
    solution_1 = module_0.Solution()
    dict_0 = {}
    list_3 = solution_1.threeSum(list_2)
    solution_2 = module_0.Solution(**dict_0)
    int_1 = -1656
    int_2 = -2151
    list_4 = [int_1, int_2]
    list_5 = solution_0.threeSum(list_4)
