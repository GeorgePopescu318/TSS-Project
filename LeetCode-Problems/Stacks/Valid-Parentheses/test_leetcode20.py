# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import leetcode20 as module_0


def test_case_0(): #PASSED
    str_0 = "(]uEb@HB"
    solution_0 = module_0.Solution()
    bool_0 = solution_0.isValid(str_0)
    assert bool_0 is False


def test_case_1(): #PASSED
    str_0 = ""
    solution_0 = module_0.Solution()
    bool_0 = solution_0.isValid(str_0)
    assert bool_0 is True


def test_case_2(): #PASSED
    solution_0 = module_0.Solution()
    solution_1 = module_0.Solution()


def test_case_3(): #PASSED
    str_0 = "sF>]CRL3P'"
    solution_0 = module_0.Solution()
    str_1 = ""
    bool_0 = solution_0.isValid(str_1)
    assert bool_0 is True
    bool_1 = solution_0.isValid(str_0)
    assert bool_1 is False
    bool_2 = solution_0.isValid(str_0)
    assert bool_2 is False
    str_2 = "$"
    bool_3 = solution_0.isValid(str_2)
    assert bool_3 is False
    solution_1 = module_0.Solution()
    str_3 = '}Iy/"X<[\nTE%Ca[A'
    solution_2 = module_0.Solution()
    bool_4 = solution_2.isValid(str_3)
    assert bool_4 is False


#@pytest.mark.xfail(strict=True)
def test_case_4(): #FAILED test_leetcode20.py::test_case_4 - TypeError: 'Solution' object is not iterable
    str_0 = "\nn|BuhKZqmOs=LW\t<"
    solution_0 = module_0.Solution()
    bool_0 = solution_0.isValid(str_0)
    assert bool_0 is False
    solution_1 = module_0.Solution()
    str_1 = "Rw!nF.utm!E{}x_K%me"
    bool_1 = solution_0.isValid(str_1)
    assert bool_1 is False
    solution_2 = module_0.Solution()
    solution_3 = module_0.Solution()
    solution_3.isValid(solution_0)
