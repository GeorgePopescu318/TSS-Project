# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import KokoEatingBananas as module_0


def test_case_0():#PASSED
    bool_0 = False
    int_0 = 607
    list_0 = [bool_0, int_0]
    int_1 = module_0.minEatingSpeed(list_0, bool_0)
    assert int_1 == 607


def test_case_1():#PASSED
    bool_0 = True
    int_0 = -2542
    bool_1 = False
    int_1 = -619
    list_0 = [bool_0, int_0, bool_1, int_1]
    int_2 = -2542
    int_3 = module_0.minEatingSpeed(list_0, int_2)


#@pytest.mark.xfail(strict=True)
def test_case_2():#FAILED: max() arg is an empty sequence
    list_0 = []
    module_0.minEatingSpeed(list_0, list_0)


def test_case_3():#PASSED
    int_0 = 1968
    bool_0 = True
    list_0 = [int_0, bool_0, bool_0, int_0]
    int_1 = 894
    int_2 = module_0.minEatingSpeed(list_0, int_1)
    assert int_2 == 5
    bool_1 = True
    list_1 = [int_0, int_0, int_0, bool_1]
    int_3 = module_0.minEatingSpeed(list_1, int_0)
    assert int_3 == 4
    bool_2 = True
    int_4 = module_0.minEatingSpeed(list_1, bool_2)
    assert int_4 == 1968
