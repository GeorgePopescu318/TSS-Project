# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import cod as module_0
#https://github.com/gahogg/Leetcode-Solutions/blob/main/Generate%20Parentheses%20-%20Leetcode%2022/Generate%20Parentheses%20-%20Leetcode%2022.py

def test_case_0():#PASSED
    bool_0 = True
    list_0 = module_0.generateParenthesis(bool_0)


# @pytest.mark.xfail(strict=True)
def test_case_1():# XFAIL FAILED test_cod.py::test_case_1 - TypeError: '<' not supported between instances of 'int' and 'list'
    list_0 = []
    module_0.generateParenthesis(list_0)


# @pytest.mark.xfail(strict=True)
def test_case_2():# XFAIL FAILED test_cod.py::test_case_2 - TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'
    none_type_0 = None
    module_0.generateParenthesis(none_type_0)

# @pytest.mark.xfail(strict=True)
def test_case_3():# XFAIL FAILED test_cod.py::test_case_3 - TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'
    bool_0 = True
    list_0 = module_0.generateParenthesis(bool_0)
    none_type_0 = None
    module_0.generateParenthesis(none_type_0)


def test_case_4():#PASSED
    int_0 = -3951
    list_0 = module_0.generateParenthesis(int_0)


# @pytest.mark.xfail(strict=True)
def test_case_5():# XFAIL FAILED test_cod.py::test_case_5 - TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'
    none_type_0 = None
    module_0.generateParenthesis(none_type_0)