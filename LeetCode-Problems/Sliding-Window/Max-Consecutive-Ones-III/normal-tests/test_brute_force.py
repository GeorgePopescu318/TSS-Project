# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import brute_force as module_0


# @pytest.mark.xfail(strict=True)
def test_case_0(): # FAILED - TypeError: '<=' not supported between instances of 'int' and 'list'
    int_0 = -793
    list_0 = [int_0, int_0, int_0]
    solution_0 = module_0.Solution()
    solution_0.longestOnes(list_0, list_0)


def test_case_1(): # PASSED
    int_0 = -793
    list_0 = [int_0, int_0, int_0, int_0]
    solution_0 = module_0.Solution()
    var_0 = solution_0.longestOnes(list_0, int_0)
    assert var_0 == 0


# @pytest.mark.xfail(strict=True)
def test_case_2(): # FAILED - TypeError: brute_force.Solution() argument after * must be an iterable, not int
    int_0 = 1478
    module_0.Solution(*int_0)


def test_case_3(): # PASSED
    list_0 = [] 
    solution_0 = module_0.Solution(*list_0)
    int_0 = -793
    list_1 = [int_0, int_0, int_0, int_0]
    solution_1 = module_0.Solution()
    var_0 = solution_1.longestOnes(list_1, int_0)
    assert var_0 == 0
    var_1 = solution_0.longestOnes(list_1, var_0)
    assert var_1 == 4
