# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import test as module_0


def test_case_0(): # PASSED
    bool_0 = True
    int_0 = -591
    bool_1 = True
    list_0 = [bool_0, int_0, bool_1, int_0]
    solution_0 = module_0.Solution()
    int_1 = solution_0.minSubArrayLen(bool_0, list_0)
    assert int_1 == 1
    solution_1 = module_0.Solution()


# @pytest.mark.xfail(strict=True)
def test_case_1(): # FAILED - TypeError: test.Solution() argument after * must be an iterable, not bool
    bool_0 = False
    module_0.Solution(*bool_0)


# @pytest.mark.xfail(strict=True)
def test_case_2(): # FAILED - TypeError: object of type 'NoneType' has no len()
    int_0 = 839
    bool_0 = True
    int_1 = 377
    bool_1 = False
    list_0 = [bool_0, int_1, int_0, bool_1]
    solution_0 = module_0.Solution()
    int_2 = solution_0.minSubArrayLen(int_0, list_0)
    assert int_2 == 1
    solution_1 = module_0.Solution()
    solution_2 = module_0.Solution()
    none_type_0 = None
    solution_1.minSubArrayLen(none_type_0, none_type_0)
