# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import test as module_0


# @pytest.mark.xfail(strict=True)
def test_case_0(): # FAILED - IndexError: list index out of range
    list_0 = []
    solution_0 = module_0.Solution(*list_0)
    solution_1 = module_0.Solution()
    solution_2 = module_0.Solution(*list_0)
    str_0 = ">-66^he{YuJ]x"
    bool_0 = solution_2.checkInclusion(str_0, list_0)
    assert bool_0 is False
    str_1 = 'L\tBG(0Sxm[}fz{"o'
    solution_1.checkInclusion(str_1, str_1)


def test_case_1(): # PASSED
    solution_0 = module_0.Solution()
    str_0 = ""
    bool_0 = solution_0.checkInclusion(str_0, str_0)
    assert bool_0 is True


def test_case_2(): # PASSED
    solution_0 = module_0.Solution()


# @pytest.mark.xfail(strict=True)
def test_case_3(): # FAILED - IndexError: list index out of range
    solution_0 = module_0.Solution()
    str_0 = "snk0*RwdMT%`"
    solution_0.checkInclusion(str_0, str_0)


# @pytest.mark.xfail(strict=True)
def test_case_4(): # FAILED - IndexError: list index out of range
    solution_0 = module_0.Solution()
    str_0 = "a["
    str_1 = "mXIytLy[#DH"
    solution_0.checkInclusion(str_0, str_1)


# @pytest.mark.xfail(strict=True)
def test_case_5(): # FAILED - TypeError: object of type 'NoneType' has no len()
    complex_0 = 162.6 + 838.1j
    none_type_0 = None
    solution_0 = module_0.Solution()
    str_0 = "a"
    str_1 = "ja%QN\t32g4J*VO{"
    bool_0 = solution_0.checkInclusion(str_0, str_1)
    assert bool_0 is True
    str_2 = ""
    str_3 = "FNls"
    bool_1 = solution_0.checkInclusion(str_3, str_2)
    assert bool_1 is False
    solution_1 = module_0.Solution()
    bytes_0 = b"!\xee\xb8\xc5\x8c\xf4\xbd\xa7\x85\xd4.Qj\x9f\xd0\xe6\xf1\xf5"
    dict_0 = {str_2: none_type_0, bytes_0: complex_0}
    bool_2 = solution_0.checkInclusion(str_2, dict_0)
    assert bool_2 is True
    solution_0.checkInclusion(none_type_0, str_2)


# @pytest.mark.xfail(strict=True)
def test_case_6(): # FAILED - TypeError: Solution() takes no arguments
    solution_0 = module_0.Solution()
    str_0 = "a"
    str_1 = "WTl"
    bool_0 = solution_0.checkInclusion(str_0, str_1)
    assert bool_0 is False
    list_0 = [bool_0]
    module_0.Solution(*list_0)
